name: Continuous Integration

on:
  push:
    branches:
      - "main"
  pull_request:
    types: [opened, synchronize]
    branches:
      - "main"
    paths:
      - "**.ts"
      - "**.tsx"
      - "**.scss"
      - "**.js"
      - "**.mjs"
      - "**.css"
      - "**.json"
  workflow_dispatch:

jobs:
  setup:
    name: Setup and Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Prisma Generate
        run: npm run prisma:generate

      # Optional: Persist the node_modules directory for subsequent jobs
      - uses: actions/cache@v3
        id: node-modules-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

  code-tests:
    name: Code Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      # Restore cached node_modules
      - uses: actions/cache@v3
        id: node-modules-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

      # If cache restore fails, this will run
      - name: Install dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Check formatting
        run: npm run prettier

      - name: Check lint
        run: npm run lint

      - name: Check types
        run: npm run types:check

      - name: Run tests
        run: npm run test:coverage

  infra-tests:
    name: Infrastructure Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      # Restore cached node_modules
      - uses: actions/cache@v3
        id: node-modules-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

      # If cache restore fails, this will run
      - name: Install dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Initialize Terraform
        run: terraform init

      - name: Validate Terraform
        run: terraform validate

      - name: Plan Terraform
        run: terraform plan
